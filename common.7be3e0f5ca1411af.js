"use strict";(self.webpackChunkAngularHero=self.webpackChunkAngularHero||[]).push([[592],{1566:(I,a,c)=>{c.d(a,{P:()=>p,z:()=>h});var o=c(727);class f extends o.w0{constructor(e,s){super()}schedule(e,s=0){return this}}const l={setInterval(r,e,...s){const{delegate:t}=l;return(null==t?void 0:t.setInterval)?t.setInterval(r,e,...s):setInterval(r,e,...s)},clearInterval(r){const{delegate:e}=l;return((null==e?void 0:e.clearInterval)||clearInterval)(r)},delegate:void 0};var v=c(8737);const u={now:()=>(u.delegate||Date).now(),delegate:void 0};class i{constructor(e,s=i.now){this.schedulerActionCtor=e,this.now=s}schedule(e,s=0,t){return new this.schedulerActionCtor(this,e).schedule(t,s)}}i.now=u.now;const h=new class y extends i{constructor(e,s=i.now){super(e,s),this.actions=[],this._active=!1,this._scheduled=void 0}flush(e){const{actions:s}=this;if(this._active)return void s.push(e);let t;this._active=!0;do{if(t=e.execute(e.state,e.delay))break}while(e=s.shift());if(this._active=!1,t){for(;e=s.shift();)e.unsubscribe();throw t}}}(class w extends f{constructor(e,s){super(e,s),this.scheduler=e,this.work=s,this.pending=!1}schedule(e,s=0){if(this.closed)return this;this.state=e;const t=this.id,n=this.scheduler;return null!=t&&(this.id=this.recycleAsyncId(n,t,s)),this.pending=!0,this.delay=s,this.id=this.id||this.requestAsyncId(n,this.id,s),this}requestAsyncId(e,s,t=0){return l.setInterval(e.flush.bind(e,this),t)}recycleAsyncId(e,s,t=0){if(null!=t&&this.delay===t&&!1===this.pending)return s;l.clearInterval(s)}execute(e,s){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const t=this._execute(e,s);if(t)return t;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(e,s){let n,t=!1;try{this.work(e)}catch(d){t=!0,n=d||new Error("Scheduled action threw falsy error")}if(t)return this.unsubscribe(),n}unsubscribe(){if(!this.closed){const{id:e,scheduler:s}=this,{actions:t}=s;this.work=this.state=this.scheduler=null,this.pending=!1,(0,v.P)(t,this),null!=e&&(this.id=this.recycleAsyncId(s,e,null)),this.delay=null,super.unsubscribe()}}}),p=h}}]);